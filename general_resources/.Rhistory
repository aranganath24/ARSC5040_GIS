sea_map
sea_map<-tm_shape(trade_2015_spatial_sea)+
tm_polygons(col="trade_gdp_2015",
n=7,
breaks=c(0, 25, 50, 75, 100, 150, 250, 400),
palette="YlOrBr")+
tm_layout(legend.show=F,
title="Southeast Asia",
title.position="right")
sea_map
sea_map<-tm_shape(trade_2015_spatial_sea)+
tm_polygons(col="trade_gdp_2015",
n=7,
breaks=c(0, 25, 50, 75, 100, 150, 250, 400),
palette="YlOrBr")+
tm_layout(legend.show=F,
title="Southeast Asia",
title.position=c("right", "top"))
sea_map
trade_map_2015_custom_breaks
print(sea_map, vp = viewport(0.8, 0.27, width = 0.4, height = 0.4))
sea_map<-tm_shape(trade_2015_spatial_sea)+
tm_polygons(col="trade_gdp_2015",
n=7,
breaks=c(0, 25, 50, 75, 100, 150, 250, 400),
palette="YlOrBr")+
tm_layout(legend.show=F,
title="Southeast Asia",
title.position=c("right", "top"),
title.size=1)
sea_map
trade_map_2015_custom_breaks
print(sea_map, vp = viewport(0.8, 0.27, width = 0.4, height = 0.4))
sea_map<-tm_shape(trade_2015_spatial_sea)+
tm_polygons(col="trade_gdp_2015",
n=7,
breaks=c(0, 25, 50, 75, 100, 150, 250, 400),
palette="YlOrBr")+
tm_layout(legend.show=F,
title="Southeast Asia",
title.position=c("right", "top"),
title.size=0.85)
sea_map
trade_map_2015_custom_breaks
print(sea_map, vp = viewport(0.8, 0.27, width = 0.4, height = 0.4))
trade_map_2015_custom_breaks
print(sea_map, vp = viewport(0.8, 0.27, width = 0.35, height = 0.35))
trade_map_2015_custom_breaks
print(sea_map, vp = viewport(0.8, 0.27, width = 0.35, height = 0.35))
trade_map_2015_custom_breaks
print(sea_map, viewport(0.8, 0.27, width = 0.35, height = 0.35))
?tmap_save
trade_gdp_2010_2015<-trade_gdp_2010_2018 %>%
filter(year=="2010"|year=="2015")
trade_gdp_2010_2015_wide<-trade_gdp_2010_2015 %>%
pivot_wider(names_from=year, values_from=c(NE.TRD.GNFS.ZS))
trade_gdp_2010_2015_wide<-trade_gdp_2010_2015_wide %>%
rename("trade_gdp_2015"="2015") %>%
rename("trade_gdp_2010"="2010")
trade_gdp_2010_2015_wide<-
trade_gdp_2010_2015_wide %>%
mutate("2015_2010_pctpt_difference"=(trade_gdp_2015-trade_gdp_2010))
trade_gdp_2010_2015_wide_spatial<-full_join(country_boundaries, trade_gdp_2010_2015_wide,
by=c("iso_a3"="iso3c"))
View(trade_gdp_2010_2015_wide_spatial)
mean_trade<-trade_gdp_2010_2018 %>%
group_by(iso3c) %>%
summarize(trade_2010_2018_mean=mean(NE.TRD.GNFS.ZS, na.rm=T))
mean_trade_spatial<-full_join(country_boundaries, mean_trade,
by=c("iso_a3"="iso3c"))
View(mean_trade_spatial)
getwd()
setwd("/Users/adra7980/Documents/gis_class_scratch")
pdf("inset.pdf", width=12, height=4)
trade_map_2015_custom_breaks
print(sea_map, viewport(0.8, 0.27, width = 0.35, height = 0.35))
dev.off()
setwd("/Users/adra7980/Documents/gis_class_scratch")
pdf("inset.pdf")
trade_map_2015_custom_breaks
print(sea_map, viewport(0.8, 0.27, width = 0.35, height = 0.35))
dev.off()
sea_map
sea_map
tmap_mode("plot")
# prints map assigned to "trade_map_2015" object
trade_map_2015
trade_map_2015_custom_breaks<-
tm_shape(trade_2015_spatial)+
tm_polygons(col="trade_gdp_2015",
breaks=c(0, 25, 50, 75, 100, 150, 250, 400), # sets custom legend breaks
palette="YlOrBr",
title="Trade as a % of GDP,\n2015",
textNA="No Data")+
tm_layout(legend.outside=T,
legend.outside.position = "bottom",
main.title="Crossnational Variation in Commercial Integration, 2015",
main.title.size=1,
main.title.position="center",
inner.margins=c(0.06,0.10,0.10,0.08), # Sets margins to create whitespace
frame=FALSE,
attr.outside = TRUE)+
tm_credits("Map Author: Aditya Ranganath\nData Source: World Bank\nDevelopment Indicators (WDI)", position=c(0.4,0), size=0.38)
trade_map_2015_custom_breaks
# Makes Southeast Asia map and assigns to new object named "sea_map"
sea_map<-tm_shape(trade_2015_spatial_sea)+ # defines spatial object
tm_polygons(col="trade_gdp_2015", # defines column to be mapped
n=7, # sets number of leg
breaks=c(0, 25, 50, 75, 100, 150, 250, 400), # sets custom breaks
palette="YlOrBr")+ # sets color palette
tm_layout(legend.show=F, # removes legend
title="Southeast Asia", # adds inset title
title.position=c("right", "top"), # positions inset title
title.size=0.85) # sets inset title text
trade_map_2015_custom_breaks
print(sea_map, viewport(0.8, 0.27, width = 0.35, height = 0.35))
?viewport
View(trade_gdp_2010_2015)
trade_gdp_2010_2015_wide %>% datatable(extensions=c("Scroller", "FixedColumns"), options = list(
deferRender = TRUE,
scrollY = 350,
scrollX = 350,
dom = "t",
scroller = TRUE,
fixedColumns = list(leftColumns = 3)
))
# Transforms "trade_gdp_2010_2015" from a "long" dataset to a "wide" dataset in which each year is assigned its own column and populated with values taken from the "trade_gdp_2010_2015"; the wide dataset is assigned to a new object named "trade_gdp_2010_2015_wide"
trade_gdp_2010_2015_wide<-trade_gdp_2010_2015 %>%
pivot_wider(names_from=year, values_from=c(NE.TRD.GNFS.ZS))
View(trade_gdp_2010_2015_wide)
View(mean_trade)
getwd()
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(trade_map_2015_custom_breaks, "trade_gdp_custom.pdf")
?tmap_save
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(trade_map_2015_custom_breaks, "trade_gdp_custom.pdf", height=30, width=30)
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(trade_map_2015_custom_breaks, "trade_gdp_custom.pdf", height=100, width=100)
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(trade_map_2015_custom_breaks, "trade_gdp_custom.pdf", height=40, width=40)
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(trade_map_2015_custom_breaks, "trade_gdp_custom.pdf", height=20, width=20)
trade_map_2015_custom_breaks
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(trade_map_2015_custom_breaks, "trade_gdp_custom.pdf", width=1920, height=1080)
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(tm=trade_map_2015_custom_breaks, insets_tm = sea_map, insets_vp=viewport(0.8, 0.27, width = 0.35, height = 0.35), filename="trade_gdp_custom_inset.pdf", width=1920, height=1080)
# Makes Southeast Asia map and assigns to new object named "sea_map"
sea_map<-tm_shape(trade_2015_spatial_sea)+ # defines spatial object
tm_polygons(col="trade_gdp_2015", # defines column to be mapped
n=7, # sets number of leg
breaks=c(0, 25, 50, 75, 100, 150, 250, 400), # sets custom breaks
palette="YlOrBr")+ # sets color palette
tm_layout(legend.show=F, # removes legend
title="Southeast Asia", # adds inset title
title.position=c("right", "top"), # positions inset title
title.size=0.6) # sets inset title text
sea_map
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(tm=trade_map_2015_custom_breaks, insets_tm = sea_map, insets_vp=viewport(0.8, 0.27, width = 0.35, height = 0.35), filename="trade_gdp_custom_inset.pdf", width=1920, height=1080)
setwd("/Users/adra7980/Documents/gis_class_scratch")
tmap_save(tm=trade_map_2015_custom_breaks,
filename="trade_gdp_custom.pdf",
width=1920,
height=1080)
getwd()
R.version()
R.Version()
country_boundaries<-ne_countries(scale="medium", returnclass="sf")
tm_shape(country_boundaries)+
tm_polygons()
country_boundaries<-ne_countries(scale="medium", returnclass="sf")
tm_shape(country_boundaries)+
tm_polygons()
tm_shape(country_boundaries)+
tm_polygons()
tm_shape(country_boundaries)+
tm_polygons()
?spData
country_boundaries<-ne_countries(scale="medium", returnclass="sf")
library(tmap)
library(rnaturalearth)
library(rnaturalearthdata)
country_boundaries<-ne_countries(scale="medium", returnclass="sf")
tm_shape(country_boundaries)+
tm_polygons()
knitr::opts_chunk$set(echo = TRUE)
country_boundaries<-ne_countries(scale="medium", returnclass="sf") %>%
filter(iso_a3 !="ATA")
View(country_boundaries)
country_boundaries<-ne_countries(scale="medium", returnclass="sf") %>%
filter(iso_a3 !="ATA")
x<-ne_countries(scale="medium", returnclass="sf") %>%
filter(iso_a3 !="ATA")
country_boundaries<-ne_countries(scale="medium", returnclass="sf")
country_boundaries<-country_boundaries %>%
filter(filter(iso_a3 !="ATA"))
library(WDI)
library(sf)
library(tmap)
library(rnaturalearth)
library(rnaturalearthdata)
library(tidyverse)
library(grid)
country_boundaries<-ne_countries(scale="medium", returnclass="sf")
country_boundaries<-country_boundaries %>%
filter(filter(iso_a3 !="ATA"))
country_boundaries<-country_boundaries %>%
filter(iso_a3 !="ATA"))
country_boundaries<-country_boundaries %>%
filter(iso_a3 !="ATA")
country_boundaries<-ne_countries(scale="medium", returnclass="sf") %>%
filter(iso_a3 !="ATA")
tmap_shape(country_boundaries)+
tm_polygons()
tm_shape(country_boundaries)+
tm_polygons()
knitr::opts_chunk$set(echo = TRUE)
tmap_mode("plot")
tm_shape(trade_2015_spatial)+
tm_polygons(col="trade_gdp_2015",
n=7,
style="quantile",
palette="YlOrBr",
title="Trade as a % of GDP,\n2015",
textNA="No Data")+
tm_layout(legend.outside=T,
legend.outside.position = "bottom",
main.title="Crossnational Variation in Commercial Integration, 2015",
main.title.size=1,
main.title.position="center",
inner.margins=c(0.06,0.10,0.10,0.08), # Sets margins to create whitespace
frame=FALSE,
attr.outside = TRUE)+ # Places credits section outside map
tm_credits("Map Author: Aditya Ranganath\nData Source: World Bank\nDevelopment Indicators (WDI)", position=c(0.78,0), size=0.38) # Specifies content, position, size of credits
country_boundaries<-ne_countries(scale="medium", returnclass="sf") %>%
filter(iso_a3 !="ATA")
tm_shape(country_boundaries)+
tm_polygons()
trade_gdp_2010_2018<-WDI(country="all", # specifies we want data for all countries available
indicator="NE.TRD.GNFS.ZS", # specifies code for desired indicator
start=2010, # Start year for data series
end=2018, # End year for data series
extra=T) # returns
trade_gdp_2015<-
trade_gdp_2010_2018 %>%  # Establishes object to be modified
filter(year=="2015") %>% # Subsets observations where the "year" variable equals "2015"
rename(trade_gdp_2015=NE.TRD.GNFS.ZS)
trade_2015_spatial<-full_join(country_boundaries, trade_gdp_2015,
by=c("iso_a3"="iso3c"))
tm_shape(trade_2015_spatial)+
tm_polygons(col="trade_gdp_2015",
n=7,
style="quantile",
palette="YlOrBr",
title="Trade as a % of GDP,\n2015",
textNA="No Data")+
tm_layout(legend.outside=T,
legend.outside.position = "bottom",
main.title="Crossnational Variation in Commercial Integration, 2015",
main.title.size=1,
main.title.position="center",
inner.margins=c(0.06,0.10,0.10,0.08), # Sets margins to create whitespace
frame=FALSE,
attr.outside = TRUE)+ # Places credits section outside map
tm_credits("Map Author: Aditya Ranganath\nData Source: World Bank\nDevelopment Indicators (WDI)", position=c(0.78,0), size=0.38) # Specifies content, position, size of credits
tm_shape(trade_2015_spatial)+
tm_polygons(col="trade_gdp_2015",
n=7,
style="quantile",
palette="YlOrBr",
title="Trade as a % of GDP,\n2015",
textNA="No Data")+
tm_layout(legend.outside=T,
legend.outside.position = "bottom",
main.title="Crossnational Variation in Commercial Integration, 2015",
main.title.size=1,
main.title.position="center",
inner.margins=c(0.06,0.10,0.10,0.08), # Sets margins to create whitespace
frame=FALSE,
attr.outside = TRUE)+ # Places credits section outside map
tm_credits("Map Author: Aditya Ranganath\nData Source: World Bank\nDevelopment Indicators (WDI)", position=c(0.78,0), size=0.38) # Specifies content, position, size of credits
wdi_map_maker<-function(wdi_variable_code, start_year, end_year,
legend.title, main_map_title){
country_boundaries<-ne_countries(scale="medium", returnclass="sf") %>%
filter(iso_a3 !="ATA")
wdi_extract<-WDI(country="all",
indicator=wdi_variable_code,
start=start_year,
end=end_year,
extra=T)
spatial_object_tomap<-full_join(country_boundaries, wdi_extract,
by=c("iso_a3"="iso3c"))
final_map<-tm_shape(spatial_object_tomap)+
tm_polygons(col=wdi_variable_code,
n=7,
style="quantile",
palette="YlOrBr",
title=legend.title,
textNA="No Data")+
tm_layout(legend.outside=T,
legend.outside.position = "bottom",
main.title=main_map_title,
main.title.size=1,
main.title.position="center",
inner.margins=c(0.06,0.10,0.10,0.08), # Sets margins to create whitespace
frame=FALSE,
attr.outside = TRUE)+ # Places credits section outside map
tm_credits("Map Author: Aditya Ranganath\nData Source: World Bank\nDevelopment Indicators (WDI)", position=c(0.78,0), size=0.38) # Specifies content, position, size of credits
return(final_map)
}
View(WDI_variables)
wdi_map_maker(wdi_variable_code="BG.KAC.FNEI.GD.ZS",
, start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)
", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="BG.KAC.FNEI.GD.ZS", start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="BG.KLT.DINV.GD.PP.ZS", start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="DP.DOD.DLD1.CR.CG.Z1", start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="NE.TRD.GNFS.ZS", start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="NY.GDP.MKTP.KN", start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="BG.GSR.NFSV.GD.ZS", start_year=2017, end_year=2017,
legend.title="Gross private capital flows (% of GDP)", main_map_title="Capital Flows")
wdi_map_maker(wdi_variable_code="BG.GSR.NFSV.GD.ZS", start_year=2017, end_year=2017,
legend.title="Services Trade (% of GDP)", main_map_title="Service Market Integration, 2017")
wdi_map_maker(wdi_variable_code="TG.VAL.TOTL.GG.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="TG.VAL.TOTL.GG.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="BG.GSR.NFSV.GD.ZS", start_year=2017, end_year=2017,
legend.title="Services Trade (% of GDP)", main_map_title="Service Market Integration, 2017")
wdi_map_maker(wdi_variable_code="TG.VAL.TOTL.GG.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="TG.VAL.TOTL.GD.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="TG.VAL.TOTL.GG.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="NE.EXP.GNFS.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="NE.IMP.GNFS.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="GB.TAX.TOTL.GD.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="GB.TAX.TOTL.GDP.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="GC.TAX.TOTL.GD.ZS", start_year=2017, end_year=2017,
legend.title="Goods Trade (% of GDP)", main_map_title="Goods Market Integration, 2017")
wdi_map_maker(wdi_variable_code="GC.TAX.TOTL.GD.ZS", start_year=2017, end_year=2017,
legend.title="Taxes (% of GDP)", main_map_title="Government Taxes as a Share of GDP, 2017")
?map2
?pmap
median_age_graph<-function(state_abbrev, state_full_name){
census_call<-get_decennial(geography = "county",
state=state_abbrev,
variables = "P013001",
geometry=TRUE,
year = 2010) %>%
rename(median_age=value) %>%
mutate(County=str_remove(NAME, paste0(" County,", " ", state_full_name))) %>%
select(-NAME)
median_age_ggplot<-
census_call %>%
ggplot(aes(x = median_age, y = reorder(County, median_age))) +
geom_point()+
labs(title=paste0("Median Age by County,", " ", state_full_name), x="Median Age", y="County", caption="Source: United States census accessed via tidycensus")+
theme(plot.title=element_text(hjust=0.5),
plot.caption=element_text(size=5))
return(median_age_ggplot)
}
median_age_graph("NM", "New Mexico")
library(tidycensus)
median_age_graph("NM", "New Mexico")
census_api_key("7d3ec56a20c9f554972004e88aceb135e9d422e0")
median_age_graph<-function(state_abbrev, state_full_name){
census_call<-get_decennial(geography = "county",
state=state_abbrev,
variables = "P013001",
geometry=TRUE,
year = 2010) %>%
rename(median_age=value) %>%
mutate(County=str_remove(NAME, paste0(" County,", " ", state_full_name))) %>%
select(-NAME)
median_age_ggplot<-
census_call %>%
ggplot(aes(x = median_age, y = reorder(County, median_age))) +
geom_point()+
labs(title=paste0("Median Age by County,", " ", state_full_name), x="Median Age", y="County", caption="Source: United States census accessed via tidycensus")+
theme(plot.title=element_text(hjust=0.5),
plot.caption=element_text(size=5))
return(median_age_ggplot)
}
median_age_graph("NM", "New Mexico")
state_abbrev<-c("NM", "UT", "AZ", "WY")
state_full_name<-c("New Mexico", "Utah", "Arizona", "Wyoming")
county_age_graphs_list<-map2(state_abbrev, state_full_name, .f=median_age_graph)
country_age_graphs_list[[1]]
county_age_graphs_list[[1]]
county_age_graphs_list[[2]]
county_age_graphs_list<-map2(.x=state_abbrev, .y=state_full_name, .f=median_age_graph)
x<-load_variables(2010, "sf1")
View(x)
P010004
read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt")
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt")
View(x)
x<-read.csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt")
View(x)
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", header=F)
?read_csv
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", col_names = =F)
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", col_names=F)
library(tidyr)
library(stringr)
x<-x %>% separate(into=c("var1", "var2"), sep="")
x<-x %>% separate(into=c("var1", "var2"), sep=" ")
x<-x %>% separate(into=c("var1", "var2"), sep=" ")
x<-x %>% separate(X1, into=c("var1", "var2"), sep=" ")
View(x)
x<-x %>% separate(X1, into=c("var1", "var2"), sep="")
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", col_names=F)
x<-x %>% separate(X1, into=c("var1", "var2"), sep="")
View(x)
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", col_names=F)
View(x)
x<-x %>% separate(X1, into=c("var1", "var2"), sep="      ")
View(x)
?separate
x<-x %>% separate(X1, into=c("var1", "var2"), sep=15)
x<-read_csv("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", col_names=F)
x<-x %>% separate(X1, into=c("var1", "var2"), sep=15)
x
View(x)
?st_make_valid
y<-read.delim("/Users/adra7980/Documents/patronprojects/hd_@/2019_Individual_Unit_File/2019FinEstDAT_06102021modp_pu.txt", header=F)
View(y)
g<-read.delim("/Users/adra7980/Downloads/2019_Individual_Unit_File/19statetypepu.txt", header=F)
g
View(g)
?read_delim_chunked
?read_delim
input_list<-list(wdi_variable_code=c("BG.GSR.NFSV.GD.ZS", "GC.TAX.TOTL.GD.ZS"),
start_year=c(2017, 2017),
end_year=c(2017, 2017),
legend.title=c("Services Trade (% of GDP)", "Taxes (%GDP)"),
main_map_title=c("Service Market Integration, 2017", "Government Taxes as a Share of GDP, 2017")
input_list<-list(wdi_variable_code=c("BG.GSR.NFSV.GD.ZS", "GC.TAX.TOTL.GD.ZS"),
start_year=c(2017, 2017),
end_year=c(2017, 2017),
legend.title=c("Services Trade (% of GDP)", "Taxes (%GDP)",
main_map_title=c("Service Market Integration, 2017", "Government Taxes as a Share of GDP, 2017")
input_list<-list(wdi_variable_code=c("BG.GSR.NFSV.GD.ZS", "GC.TAX.TOTL.GD.ZS"),
start_year=c(2017, 2017),
end_year=c(2017, 2017),
legend.title=c("Services Trade (% of GDP)", "Taxes (%GDP)",
main_map_title=c("Service Market Integration, 2017", "Government Taxes as a Share of GDP, 2017"))
input_list<-list(wdi_variable_code=c("BG.GSR.NFSV.GD.ZS","GC.TAX.TOTL.GD.ZS"),
start_year=c(2017, 2017),
end_year=c(2017, 2017),
legend.title=c("Services Trade (% of GDP)", "Taxes (%GDP)",
main_map_title=c("Service Market Integration, 2017", "Government Taxes as a Share of GDP, 2017"))
input_list<-list(wdi_variable_code=c("BG.GSR.NFSV.GD.ZS", "GC.TAX.TOTL.GD.ZS"),
start_year=c(2017, 2017),
end_year=c(2017, 2017),
legend.title=c("Services Trade (% of GDP)", "Taxes (%GDP)",
main_map_title=c("Service Market Integration, 2017", "Government Taxes as a Share of GDP, 2017"))
input_list<-list(wdi_variable_code=c("BG.GSR.NFSV.GD.ZS", "GC.TAX.TOTL.GD.ZS"),
start_year=c(2017, 2017),
end_year=c(2017, 2017),
legend.title=c("Services Trade (% of GDP)", "Taxes (%GDP)"),
main_map_title=c("Service Market Integration, 2017", "Government Taxes as a Share of GDP, 2017"))
pmap(input_list, wdi_map_maker)
g
j
r
s
map_list
map_list<-pmap(input_list, wdi_map_maker)
map_list
map_list[[2]]
?st_combine
?st_dissolve
j<-country_boundaries %>% summarise(area=sum(area))
test<-country_boundaries %>% st_union()
tm_shape(test)+tm_polygons()
View(test)
test
View(country_boundaries)
class(test)
View(test)
test[[1]]
dissolve_test<-country_boundaries %>% group_by(type) %>% st_union()
tm_shape(dissolve_test)+
tm_polygons()
st_dissolve
usa_state_boundaries<-state_population_2010_geo<-get_decennial(geography = "state",
variables = "P001001",
year = 2010,
geometry=TRUE)
tm_shape(usa_state_boundaries)+
tm_polygons()
View(usa_state_boundaries)
d
f
r
d
t
